<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cf.bsot.mapper.QuartzJobMapper">

    <resultMap id="BaseResultMap" type="com.cf.bsot.model.pojo.QuartzJob">
        <id column="job_id" jdbcType="BIGINT" property="jobId" />
        <result column="bean_name" jdbcType="VARCHAR" property="beanName" />
        <result column="cron_expression" jdbcType="VARCHAR" property="cronExpression" />
        <result column="is_stop" jdbcType="BIT" property="isStop" />
        <result column="job_name" jdbcType="VARCHAR" property="jobName" />
        <result column="method_name" jdbcType="VARCHAR" property="methodName" />
        <result column="params" jdbcType="VARCHAR" property="params" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="person_in_charge" jdbcType="VARCHAR" property="personInCharge" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="sub_task" jdbcType="VARCHAR" property="subTask" />
        <result column="pause_after_failure" jdbcType="BIT" property="pauseAfterFailure" />
        <result column="create_by" jdbcType="VARCHAR" property="createBy" />
        <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>

    <sql id="Base_Column_List">
        job_id, bean_name, cron_expression, is_stop, job_name, method_name, params, description,
        person_in_charge, email, sub_task, pause_after_failure, create_by, update_by, create_time,
        update_time
    </sql>

    <select id="getQuartzJobInfoByPrimaryKey" parameterType="Long" resultMap="BaseResultMap">
        select
          <include refid="Base_Column_List" />
        from s_bsot_quartz_job
        where job_id = #{jobId,jdbcType=BIGINT}
    </select>

    <delete id="deleteQuartzJobInfoByPrimaryKey" parameterType="Long">
        delete from s_bsot_quartz_job
        where job_id = #{jobId,jdbcType=BIGINT}
    </delete>

    <insert id="addQuartzJobInfo" parameterType="QuartzJob">
        insert into s_bsot_quartz_job (job_id, bean_name, cron_expression,
            is_stop, job_name, method_name,
            params, description, person_in_charge,
            email, sub_task, pause_after_failure,
            create_by, update_by, create_time,
            update_time)
        values (#{jobId,jdbcType=BIGINT}, #{beanName,jdbcType=VARCHAR}, #{cronExpression,jdbcType=VARCHAR},
            #{isStop,jdbcType=BIT}, #{jobName,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR},
            #{params,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{personInCharge,jdbcType=VARCHAR},
            #{email,jdbcType=VARCHAR}, #{subTask,jdbcType=VARCHAR}, #{pauseAfterFailure,jdbcType=BIT},
            #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <update id="updateQuartzJobInfoSelective" parameterType="QuartzJob">
        update s_bsot_quartz_job
        <set>
            <if test="beanName != null">
                bean_name = #{beanName,jdbcType=VARCHAR},
            </if>
            <if test="cronExpression != null">
                cron_expression = #{cronExpression,jdbcType=VARCHAR},
            </if>
            <if test="isStop != null">
                is_stop = #{isStop,jdbcType=BIT},
            </if>
            <if test="jobName != null">
                job_name = #{jobName,jdbcType=VARCHAR},
            </if>
            <if test="methodName != null">
                method_name = #{methodName,jdbcType=VARCHAR},
            </if>
            <if test="params != null">
                params = #{params,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="personInCharge != null">
                person_in_charge = #{personInCharge,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="subTask != null">
                sub_task = #{subTask,jdbcType=VARCHAR},
            </if>
            <if test="pauseAfterFailure != null">
                pause_after_failure = #{pauseAfterFailure,jdbcType=BIT},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where job_id = #{jobId,jdbcType=BIGINT}
    </update>

    <select id="getJobPageList" resultMap="BaseResultMap">
        select
          <include refid="Base_Column_List" />
        from s_bsot_quartz_job
    </select>

    <select id="getJobListByOpenStatus" resultMap="BaseResultMap">
        select
          <include refid="Base_Column_List" />
        from s_bsot_quartz_job
        where is_stop = '1'
    </select>

    <update id="setStatusStop" parameterType="Long">
      UPDATE s_bsot_quartz_job SET is_stop = '0' WHERE job_id = #{jobId,jdbcType=BIGINT}
    </update>

    <update id="setStatusRun" parameterType="Long">
      UPDATE s_bsot_quartz_job SET is_stop = '1' WHERE job_id = #{jobId,jdbcType=BIGINT}
    </update>
</mapper>