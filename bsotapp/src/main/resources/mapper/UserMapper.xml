<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cf.bsot.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.cf.bsot.model.pojo.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_list">
        id,username,password,icon,email,create_time,last_login_time,status
    </sql>

    <sql id="Mask_Column_list">
        id,username ,icon,email,create_time,last_login_time,status
    </sql>

    <select id="getUserByPrimaryKey" resultMap="BaseResultMap">
        select
          <include refid="Mask_Column_list"/>
        from p_bsot_user where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="getAllUsers" resultMap="BaseResultMap">
        select
          <include refid="Mask_Column_list"/>
        from p_bsot_user
    </select>
    
    <select id="pageListUserInfo" resultMap="BaseResultMap" parameterType="User">
        select
          <include refid="Mask_Column_list" />
        from p_bsot_user
        <where>
            <if test="username != null and username !=''">
                <bind name="searchUsername" value="'%' + username + '%'" />
                and username = #{searchUsername}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="Long">
        delete from p_bsot_user where id = #{id,jdbcType=BIGINT}
    </delete>

    <select id="loadUserByUsername" resultMap="BaseResultMap">
        select
          <include refid="Base_Column_list"/>
        from p_bsot_user where username = #{username,jdbcType=VARCHAR}
    </select>

    <update id="updateUserByPrimaryKey" parameterType="User">
        update p_bsot_user
        <set>
            <if test="username != null">
                name = #{name}
            </if>
            <if test="icon != null">
                icon = #{icon}
            </if>
            <if test="email != null">
                email = #{email}
            </if>
            <if test="createTime != null">
                create_time = #{createTime}
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime}
            </if>
            <if test="status != null">
                status = #{status}
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <insert id="addUserInfo">
        insert into p_bsot_user (username, password,
          icon, email, create_time,
          last_login_time, status)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
          #{icon,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
          #{lastLoginTime,jdbcType=TIMESTAMP}, #{status,jdbcType=BIT})
    </insert>

    <select id="getRolesByUserId" resultType="Role" parameterType="Long">
        SELECT
            r.*
        FROM
            p_bsot_user u
        INNER JOIN p_bsot_user_role_rel rel
            ON u.id = rel.user_id
        INNER JOIN p_bsot_role r
            ON r.id = rel.role_id
        WHERE u.id = #{id,jdbcType=BIGINT} ORDER BY r.order_seq
    </select>

    <select id="getMenusByUserId" resultType="Menu" parameterType="Long">
        SELECT
          distinct(m.id) as id,
          m.parent_id,
          m.name,
          m.description,
          m.path,
          m.method,
          m.type,
          m.icon,
          m.status,
          m.order_seq
        FROM
          p_bsot_role_menu_rel rmr
        LEFT JOIN
        (
            SELECT
              urr.role_id
            FROM
              p_bsot_user_role_rel urr
            WHERE
              urr.user_id = #{id}
        ) r
        ON
          r.role_id = rmr.menu_id
        INNER JOIN
          p_bsot_menu m
        ON
          m.id = rmr.menu_id
    </select>

    <update id="updateLoginTime" parameterType="String">
        UPDATE p_bsot_user u SET u.last_login_time = NOW() WHERE u.username = #{username}
    </update>

    <select id="getNavListByUsername" resultType="com.cf.bsot.model.dto.NavMenuDTO" parameterType="Long">
        SELECT
          distinct(m.id) as id,
          m.parent_id,
          m.name,
          m.description,
          m.path,
          m.method,
          m.type,
          m.icon,
          m.title,
          m.component,
          m.redirect,
          m.affix,
          m.no_cache as noCache,
          m.status,
          m.order_seq as orderSeq
        FROM
          p_bsot_role_menu_rel rmr
        LEFT JOIN
        (
            SELECT
              urr.role_id
            FROM
              p_bsot_user_role_rel urr
            WHERE
              urr.user_id = #{id}
        ) r
        ON
          r.role_id = rmr.menu_id
        INNER JOIN
          p_bsot_menu m
        ON
          m.id = rmr.menu_id
          and m.type in ('0','1')
    </select>
</mapper>