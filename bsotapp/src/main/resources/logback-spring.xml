<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文档如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文档是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。
                 当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration  scan="true" scanPeriod="300 seconds" debug="false">
    <contextName>BSOT</contextName>

    <!-- name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义后，可以使“${}”来使用变量。 -->
    <property name="log.path" value="${log.path}" />
    <property name="log.backup.path" value="${log.path}/backup" />
    <property name="log.name" value="bsot" />
    <property name="log.maxHistoryFileNum" value="30" />
    <property name="log.maxFileSize" value="100MB"/>
    <property name="log.totalMaxSize" value="4GB"/>
    <property name="log.charSet" value="UTF-8"/>
    <property name="log.common.pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} -%-5level [%thread] %logger{50} %msg %n"/>

    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>

    <!--1. 输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
        <encoder>
            <Pattern>${log.common.pattern}</Pattern>
        </encoder>
    </appender>

    <!--2. 输出到文档-->
    <!-- 2.1 root日志，所有有必要的日志纪录，时间滚动输出-->
    <appender name="rootLogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--文件名-->
        <file>${log.path}/root_${log.name}.log</file>
        <!--日志记录器的滚动策略，按日期，按大小记录-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 归档的日志文件名定义规则 -->
            <fileNamePattern>${log.backup.path}/%d{yyyyMMdd}/root_${log.name}_%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            <!-- 归档文件的最大数量设定 -->
            <maxHistory>${log.maxHistoryFileNum}</maxHistory>
            <!-- 当前日志文件的上限 -->
            <maxFileSize>${log.maxFileSize}</maxFileSize>
            <!-- 归档文件的总量大小上限 -->
            <totalSizeCap>${log.totalMaxSize}</totalSizeCap>
        </rollingPolicy>
        <!-- 日志文件的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${log.common.pattern}</pattern>
            <charset>${log.charSet}</charset>
        </encoder>
    </appender>

    <!-- 2.2 debug日志，debug等级日志纪录，时间滚动输出-->
    <appender name="debugLogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--文件名-->
        <file>${log.path}/debug_${log.name}.log</file>
        <!--日志记录器的滚动策略，按日期，按大小记录-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 归档的日志文件名定义规则 -->
            <fileNamePattern>${log.backup.path}/%d{yyyyMMdd}/debug_${log.name}_%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            <!-- 归档文件的最大数量设定 -->
            <maxHistory>${log.maxHistoryFileNum}</maxHistory>
            <!-- 当前日志文件的上限 -->
            <maxFileSize>${log.maxFileSize}</maxFileSize>
            <!-- 归档文件的总量大小上限 -->
            <totalSizeCap>${log.totalMaxSize}</totalSizeCap>
        </rollingPolicy>
        <!-- 日志文件的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${log.common.pattern}</pattern>
            <charset>${log.charSet}</charset>
        </encoder>
    </appender>

    <!-- 2.3 quartz日志，定时任务日志纪录，时间滚动输出-->
    <appender name="quartzLogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--文件名-->
        <file>${log.path}/quartz_${log.name}.log</file>
        <!--日志记录器的滚动策略，按日期，按大小记录-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 归档的日志文件名定义规则 -->
            <fileNamePattern>${log.backup.path}/%d{yyyyMMdd}/quartz_${log.name}_%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            <!-- 归档文件的最大数量设定 -->
            <maxHistory>${log.maxHistoryFileNum}</maxHistory>
            <!-- 当前日志文件的上限 -->
            <maxFileSize>${log.maxFileSize}</maxFileSize>
            <!-- 归档文件的总量大小上限 -->
            <totalSizeCap>${log.totalMaxSize}</totalSizeCap>
        </rollingPolicy>
        <!-- 日志文件的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${log.common.pattern}</pattern>
            <charset>${log.charSet}</charset>
        </encoder>
    </appender>

    <!-- 打印控制台 -->
    <root level="info">
        <appender-ref ref="console"/>
        <appender-ref ref="rootLogFile"/>
    </root>

    <!--设置对应的logger-->
    <logger name="debugLogger" level="info" additivity="false">
        <appender-ref ref="console"/>
        <appender-ref ref="debugLogFile"/>
    </logger>

    <logger name="quartzLogger" level="info" additivity="true">
        <appender-ref ref="quartzLogFile"/>
    </logger>
</configuration>